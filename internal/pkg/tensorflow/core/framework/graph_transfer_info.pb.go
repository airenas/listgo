// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.8.0
// source: tensorflow/core/framework/graph_transfer_info.proto

package framework

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GraphTransferInfo_Destination int32

const (
	GraphTransferInfo_NOP     GraphTransferInfo_Destination = 0
	GraphTransferInfo_HEXAGON GraphTransferInfo_Destination = 1
)

// Enum value maps for GraphTransferInfo_Destination.
var (
	GraphTransferInfo_Destination_name = map[int32]string{
		0: "NOP",
		1: "HEXAGON",
	}
	GraphTransferInfo_Destination_value = map[string]int32{
		"NOP":     0,
		"HEXAGON": 1,
	}
)

func (x GraphTransferInfo_Destination) Enum() *GraphTransferInfo_Destination {
	p := new(GraphTransferInfo_Destination)
	*p = x
	return p
}

func (x GraphTransferInfo_Destination) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GraphTransferInfo_Destination) Descriptor() protoreflect.EnumDescriptor {
	return file_tensorflow_core_framework_graph_transfer_info_proto_enumTypes[0].Descriptor()
}

func (GraphTransferInfo_Destination) Type() protoreflect.EnumType {
	return &file_tensorflow_core_framework_graph_transfer_info_proto_enumTypes[0]
}

func (x GraphTransferInfo_Destination) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GraphTransferInfo_Destination.Descriptor instead.
func (GraphTransferInfo_Destination) EnumDescriptor() ([]byte, []int) {
	return file_tensorflow_core_framework_graph_transfer_info_proto_rawDescGZIP(), []int{0, 0}
}

// Protocol buffer representing a handle to a tensorflow resource. Handles are
// not valid across executions, but can be serialized back and forth from within
// a single run.
type GraphTransferInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeInfo       []*GraphTransferInfo_NodeInfo       `protobuf:"bytes,1,rep,name=node_info,json=nodeInfo,proto3" json:"node_info,omitempty"`
	ConstNodeInfo  []*GraphTransferInfo_ConstNodeInfo  `protobuf:"bytes,2,rep,name=const_node_info,json=constNodeInfo,proto3" json:"const_node_info,omitempty"`
	NodeInputInfo  []*GraphTransferInfo_NodeInputInfo  `protobuf:"bytes,3,rep,name=node_input_info,json=nodeInputInfo,proto3" json:"node_input_info,omitempty"`
	NodeOutputInfo []*GraphTransferInfo_NodeOutputInfo `protobuf:"bytes,4,rep,name=node_output_info,json=nodeOutputInfo,proto3" json:"node_output_info,omitempty"`
	// Input Node parameters of transferred graph
	GraphInputNodeInfo  []*GraphTransferInfo_GraphInputNodeInfo  `protobuf:"bytes,5,rep,name=graph_input_node_info,json=graphInputNodeInfo,proto3" json:"graph_input_node_info,omitempty"`
	GraphOutputNodeInfo []*GraphTransferInfo_GraphOutputNodeInfo `protobuf:"bytes,6,rep,name=graph_output_node_info,json=graphOutputNodeInfo,proto3" json:"graph_output_node_info,omitempty"`
	// Destination of graph transfer
	Destination GraphTransferInfo_Destination `protobuf:"varint,7,opt,name=destination,proto3,enum=tensorflow.GraphTransferInfo_Destination" json:"destination,omitempty"`
}

func (x *GraphTransferInfo) Reset() {
	*x = GraphTransferInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_framework_graph_transfer_info_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GraphTransferInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphTransferInfo) ProtoMessage() {}

func (x *GraphTransferInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_framework_graph_transfer_info_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphTransferInfo.ProtoReflect.Descriptor instead.
func (*GraphTransferInfo) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_framework_graph_transfer_info_proto_rawDescGZIP(), []int{0}
}

func (x *GraphTransferInfo) GetNodeInfo() []*GraphTransferInfo_NodeInfo {
	if x != nil {
		return x.NodeInfo
	}
	return nil
}

func (x *GraphTransferInfo) GetConstNodeInfo() []*GraphTransferInfo_ConstNodeInfo {
	if x != nil {
		return x.ConstNodeInfo
	}
	return nil
}

func (x *GraphTransferInfo) GetNodeInputInfo() []*GraphTransferInfo_NodeInputInfo {
	if x != nil {
		return x.NodeInputInfo
	}
	return nil
}

func (x *GraphTransferInfo) GetNodeOutputInfo() []*GraphTransferInfo_NodeOutputInfo {
	if x != nil {
		return x.NodeOutputInfo
	}
	return nil
}

func (x *GraphTransferInfo) GetGraphInputNodeInfo() []*GraphTransferInfo_GraphInputNodeInfo {
	if x != nil {
		return x.GraphInputNodeInfo
	}
	return nil
}

func (x *GraphTransferInfo) GetGraphOutputNodeInfo() []*GraphTransferInfo_GraphOutputNodeInfo {
	if x != nil {
		return x.GraphOutputNodeInfo
	}
	return nil
}

func (x *GraphTransferInfo) GetDestination() GraphTransferInfo_Destination {
	if x != nil {
		return x.Destination
	}
	return GraphTransferInfo_NOP
}

type GraphTransferInfo_NodeInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId     int32 `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	OutputPort int32 `protobuf:"varint,2,opt,name=output_port,json=outputPort,proto3" json:"output_port,omitempty"`
}

func (x *GraphTransferInfo_NodeInput) Reset() {
	*x = GraphTransferInfo_NodeInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_framework_graph_transfer_info_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GraphTransferInfo_NodeInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphTransferInfo_NodeInput) ProtoMessage() {}

func (x *GraphTransferInfo_NodeInput) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_framework_graph_transfer_info_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphTransferInfo_NodeInput.ProtoReflect.Descriptor instead.
func (*GraphTransferInfo_NodeInput) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_framework_graph_transfer_info_proto_rawDescGZIP(), []int{0, 0}
}

func (x *GraphTransferInfo_NodeInput) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *GraphTransferInfo_NodeInput) GetOutputPort() int32 {
	if x != nil {
		return x.OutputPort
	}
	return 0
}

type GraphTransferInfo_NodeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	NodeId      int32  `protobuf:"varint,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	TypeName    string `protobuf:"bytes,3,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"`
	SocOpId     int32  `protobuf:"varint,4,opt,name=soc_op_id,json=socOpId,proto3" json:"soc_op_id,omitempty"`
	PaddingId   int32  `protobuf:"varint,5,opt,name=padding_id,json=paddingId,proto3" json:"padding_id,omitempty"`
	InputCount  int32  `protobuf:"varint,6,opt,name=input_count,json=inputCount,proto3" json:"input_count,omitempty"`
	OutputCount int32  `protobuf:"varint,7,opt,name=output_count,json=outputCount,proto3" json:"output_count,omitempty"`
}

func (x *GraphTransferInfo_NodeInfo) Reset() {
	*x = GraphTransferInfo_NodeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_framework_graph_transfer_info_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GraphTransferInfo_NodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphTransferInfo_NodeInfo) ProtoMessage() {}

func (x *GraphTransferInfo_NodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_framework_graph_transfer_info_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphTransferInfo_NodeInfo.ProtoReflect.Descriptor instead.
func (*GraphTransferInfo_NodeInfo) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_framework_graph_transfer_info_proto_rawDescGZIP(), []int{0, 1}
}

func (x *GraphTransferInfo_NodeInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GraphTransferInfo_NodeInfo) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *GraphTransferInfo_NodeInfo) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *GraphTransferInfo_NodeInfo) GetSocOpId() int32 {
	if x != nil {
		return x.SocOpId
	}
	return 0
}

func (x *GraphTransferInfo_NodeInfo) GetPaddingId() int32 {
	if x != nil {
		return x.PaddingId
	}
	return 0
}

func (x *GraphTransferInfo_NodeInfo) GetInputCount() int32 {
	if x != nil {
		return x.InputCount
	}
	return 0
}

func (x *GraphTransferInfo_NodeInfo) GetOutputCount() int32 {
	if x != nil {
		return x.OutputCount
	}
	return 0
}

type GraphTransferInfo_ConstNodeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	NodeId int32    `protobuf:"varint,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Shape  []int64  `protobuf:"varint,3,rep,packed,name=shape,proto3" json:"shape,omitempty"`
	Data   []byte   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Dtype  DataType `protobuf:"varint,5,opt,name=dtype,proto3,enum=tensorflow.DataType" json:"dtype,omitempty"`
}

func (x *GraphTransferInfo_ConstNodeInfo) Reset() {
	*x = GraphTransferInfo_ConstNodeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_framework_graph_transfer_info_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GraphTransferInfo_ConstNodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphTransferInfo_ConstNodeInfo) ProtoMessage() {}

func (x *GraphTransferInfo_ConstNodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_framework_graph_transfer_info_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphTransferInfo_ConstNodeInfo.ProtoReflect.Descriptor instead.
func (*GraphTransferInfo_ConstNodeInfo) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_framework_graph_transfer_info_proto_rawDescGZIP(), []int{0, 2}
}

func (x *GraphTransferInfo_ConstNodeInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GraphTransferInfo_ConstNodeInfo) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *GraphTransferInfo_ConstNodeInfo) GetShape() []int64 {
	if x != nil {
		return x.Shape
	}
	return nil
}

func (x *GraphTransferInfo_ConstNodeInfo) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GraphTransferInfo_ConstNodeInfo) GetDtype() DataType {
	if x != nil {
		return x.Dtype
	}
	return DataType_DT_INVALID
}

type GraphTransferInfo_NodeInputInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId    int32                          `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	NodeInput []*GraphTransferInfo_NodeInput `protobuf:"bytes,2,rep,name=node_input,json=nodeInput,proto3" json:"node_input,omitempty"`
}

func (x *GraphTransferInfo_NodeInputInfo) Reset() {
	*x = GraphTransferInfo_NodeInputInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_framework_graph_transfer_info_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GraphTransferInfo_NodeInputInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphTransferInfo_NodeInputInfo) ProtoMessage() {}

func (x *GraphTransferInfo_NodeInputInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_framework_graph_transfer_info_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphTransferInfo_NodeInputInfo.ProtoReflect.Descriptor instead.
func (*GraphTransferInfo_NodeInputInfo) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_framework_graph_transfer_info_proto_rawDescGZIP(), []int{0, 3}
}

func (x *GraphTransferInfo_NodeInputInfo) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *GraphTransferInfo_NodeInputInfo) GetNodeInput() []*GraphTransferInfo_NodeInput {
	if x != nil {
		return x.NodeInput
	}
	return nil
}

type GraphTransferInfo_NodeOutputInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId      int32   `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	MaxByteSize []int32 `protobuf:"varint,2,rep,packed,name=max_byte_size,json=maxByteSize,proto3" json:"max_byte_size,omitempty"`
}

func (x *GraphTransferInfo_NodeOutputInfo) Reset() {
	*x = GraphTransferInfo_NodeOutputInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_framework_graph_transfer_info_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GraphTransferInfo_NodeOutputInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphTransferInfo_NodeOutputInfo) ProtoMessage() {}

func (x *GraphTransferInfo_NodeOutputInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_framework_graph_transfer_info_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphTransferInfo_NodeOutputInfo.ProtoReflect.Descriptor instead.
func (*GraphTransferInfo_NodeOutputInfo) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_framework_graph_transfer_info_proto_rawDescGZIP(), []int{0, 4}
}

func (x *GraphTransferInfo_NodeOutputInfo) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *GraphTransferInfo_NodeOutputInfo) GetMaxByteSize() []int32 {
	if x != nil {
		return x.MaxByteSize
	}
	return nil
}

type GraphTransferInfo_GraphInputNodeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Shape []int64  `protobuf:"varint,2,rep,packed,name=shape,proto3" json:"shape,omitempty"`
	Dtype DataType `protobuf:"varint,3,opt,name=dtype,proto3,enum=tensorflow.DataType" json:"dtype,omitempty"`
}

func (x *GraphTransferInfo_GraphInputNodeInfo) Reset() {
	*x = GraphTransferInfo_GraphInputNodeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_framework_graph_transfer_info_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GraphTransferInfo_GraphInputNodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphTransferInfo_GraphInputNodeInfo) ProtoMessage() {}

func (x *GraphTransferInfo_GraphInputNodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_framework_graph_transfer_info_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphTransferInfo_GraphInputNodeInfo.ProtoReflect.Descriptor instead.
func (*GraphTransferInfo_GraphInputNodeInfo) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_framework_graph_transfer_info_proto_rawDescGZIP(), []int{0, 5}
}

func (x *GraphTransferInfo_GraphInputNodeInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GraphTransferInfo_GraphInputNodeInfo) GetShape() []int64 {
	if x != nil {
		return x.Shape
	}
	return nil
}

func (x *GraphTransferInfo_GraphInputNodeInfo) GetDtype() DataType {
	if x != nil {
		return x.Dtype
	}
	return DataType_DT_INVALID
}

type GraphTransferInfo_GraphOutputNodeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Shape []int64  `protobuf:"varint,2,rep,packed,name=shape,proto3" json:"shape,omitempty"`
	Dtype DataType `protobuf:"varint,3,opt,name=dtype,proto3,enum=tensorflow.DataType" json:"dtype,omitempty"`
}

func (x *GraphTransferInfo_GraphOutputNodeInfo) Reset() {
	*x = GraphTransferInfo_GraphOutputNodeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_framework_graph_transfer_info_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GraphTransferInfo_GraphOutputNodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphTransferInfo_GraphOutputNodeInfo) ProtoMessage() {}

func (x *GraphTransferInfo_GraphOutputNodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_framework_graph_transfer_info_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphTransferInfo_GraphOutputNodeInfo.ProtoReflect.Descriptor instead.
func (*GraphTransferInfo_GraphOutputNodeInfo) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_framework_graph_transfer_info_proto_rawDescGZIP(), []int{0, 6}
}

func (x *GraphTransferInfo_GraphOutputNodeInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GraphTransferInfo_GraphOutputNodeInfo) GetShape() []int64 {
	if x != nil {
		return x.Shape
	}
	return nil
}

func (x *GraphTransferInfo_GraphOutputNodeInfo) GetDtype() DataType {
	if x != nil {
		return x.Dtype
	}
	return DataType_DT_INVALID
}

var File_tensorflow_core_framework_graph_transfer_info_proto protoreflect.FileDescriptor

var file_tensorflow_core_framework_graph_transfer_info_proto_rawDesc = []byte{
	0x0a, 0x33, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f,
	0x77, 0x1a, 0x25, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f,
	0x72, 0x65, 0x2f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe5, 0x0b, 0x0a, 0x11, 0x47, 0x72, 0x61,
	0x70, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x43,
	0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x47,
	0x72, 0x61, 0x70, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x53, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x5f, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x74,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x73,
	0x74, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x74,
	0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x53, 0x0a, 0x0f, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x47,
	0x72, 0x61, 0x70, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d,
	0x6e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x56, 0x0a,
	0x10, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x6e, 0x6f, 0x64, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x63, 0x0a, 0x15, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4e, 0x6f,
	0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x12, 0x67, 0x72, 0x61, 0x70, 0x68, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x66, 0x0a, 0x16, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x74, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x13, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x4b, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a,
	0x45, 0x0a, 0x09, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e,
	0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x1a, 0xd3, 0x01, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x09, 0x73, 0x6f, 0x63, 0x5f, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x73, 0x6f, 0x63, 0x4f, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x64,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70,
	0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x92, 0x01, 0x0a,
	0x0d, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x68, 0x61, 0x70, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x05, 0x73, 0x68, 0x61, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x05, 0x64, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x64, 0x74, 0x79, 0x70,
	0x65, 0x1a, 0x70, 0x0a, 0x0d, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x0a, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x47, 0x72, 0x61,
	0x70, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x4d, 0x0a, 0x0e, 0x4e, 0x6f, 0x64, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x22,
	0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x42, 0x79, 0x74, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x1a, 0x6a, 0x0a, 0x12, 0x47, 0x72, 0x61, 0x70, 0x68, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x68, 0x61, 0x70, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x05, 0x73, 0x68, 0x61,
	0x70, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x64, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x14, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x64, 0x74, 0x79, 0x70, 0x65, 0x1a, 0x6b,
	0x0a, 0x13, 0x47, 0x72, 0x61, 0x70, 0x68, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x4e, 0x6f, 0x64,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x68, 0x61,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x05, 0x73, 0x68, 0x61, 0x70, 0x65, 0x12,
	0x2a, 0x0a, 0x05, 0x64, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14,
	0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x64, 0x74, 0x79, 0x70, 0x65, 0x22, 0x23, 0x0a, 0x0b, 0x44,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x4f,
	0x50, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x48, 0x45, 0x58, 0x41, 0x47, 0x4f, 0x4e, 0x10, 0x01,
	0x42, 0x37, 0x0a, 0x18, 0x6f, 0x72, 0x67, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x42, 0x16, 0x47, 0x72,
	0x61, 0x70, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0xf8, 0x01, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_tensorflow_core_framework_graph_transfer_info_proto_rawDescOnce sync.Once
	file_tensorflow_core_framework_graph_transfer_info_proto_rawDescData = file_tensorflow_core_framework_graph_transfer_info_proto_rawDesc
)

func file_tensorflow_core_framework_graph_transfer_info_proto_rawDescGZIP() []byte {
	file_tensorflow_core_framework_graph_transfer_info_proto_rawDescOnce.Do(func() {
		file_tensorflow_core_framework_graph_transfer_info_proto_rawDescData = protoimpl.X.CompressGZIP(file_tensorflow_core_framework_graph_transfer_info_proto_rawDescData)
	})
	return file_tensorflow_core_framework_graph_transfer_info_proto_rawDescData
}

var file_tensorflow_core_framework_graph_transfer_info_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_tensorflow_core_framework_graph_transfer_info_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_tensorflow_core_framework_graph_transfer_info_proto_goTypes = []interface{}{
	(GraphTransferInfo_Destination)(0),            // 0: tensorflow.GraphTransferInfo.Destination
	(*GraphTransferInfo)(nil),                     // 1: tensorflow.GraphTransferInfo
	(*GraphTransferInfo_NodeInput)(nil),           // 2: tensorflow.GraphTransferInfo.NodeInput
	(*GraphTransferInfo_NodeInfo)(nil),            // 3: tensorflow.GraphTransferInfo.NodeInfo
	(*GraphTransferInfo_ConstNodeInfo)(nil),       // 4: tensorflow.GraphTransferInfo.ConstNodeInfo
	(*GraphTransferInfo_NodeInputInfo)(nil),       // 5: tensorflow.GraphTransferInfo.NodeInputInfo
	(*GraphTransferInfo_NodeOutputInfo)(nil),      // 6: tensorflow.GraphTransferInfo.NodeOutputInfo
	(*GraphTransferInfo_GraphInputNodeInfo)(nil),  // 7: tensorflow.GraphTransferInfo.GraphInputNodeInfo
	(*GraphTransferInfo_GraphOutputNodeInfo)(nil), // 8: tensorflow.GraphTransferInfo.GraphOutputNodeInfo
	(DataType)(0), // 9: tensorflow.DataType
}
var file_tensorflow_core_framework_graph_transfer_info_proto_depIdxs = []int32{
	3,  // 0: tensorflow.GraphTransferInfo.node_info:type_name -> tensorflow.GraphTransferInfo.NodeInfo
	4,  // 1: tensorflow.GraphTransferInfo.const_node_info:type_name -> tensorflow.GraphTransferInfo.ConstNodeInfo
	5,  // 2: tensorflow.GraphTransferInfo.node_input_info:type_name -> tensorflow.GraphTransferInfo.NodeInputInfo
	6,  // 3: tensorflow.GraphTransferInfo.node_output_info:type_name -> tensorflow.GraphTransferInfo.NodeOutputInfo
	7,  // 4: tensorflow.GraphTransferInfo.graph_input_node_info:type_name -> tensorflow.GraphTransferInfo.GraphInputNodeInfo
	8,  // 5: tensorflow.GraphTransferInfo.graph_output_node_info:type_name -> tensorflow.GraphTransferInfo.GraphOutputNodeInfo
	0,  // 6: tensorflow.GraphTransferInfo.destination:type_name -> tensorflow.GraphTransferInfo.Destination
	9,  // 7: tensorflow.GraphTransferInfo.ConstNodeInfo.dtype:type_name -> tensorflow.DataType
	2,  // 8: tensorflow.GraphTransferInfo.NodeInputInfo.node_input:type_name -> tensorflow.GraphTransferInfo.NodeInput
	9,  // 9: tensorflow.GraphTransferInfo.GraphInputNodeInfo.dtype:type_name -> tensorflow.DataType
	9,  // 10: tensorflow.GraphTransferInfo.GraphOutputNodeInfo.dtype:type_name -> tensorflow.DataType
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_tensorflow_core_framework_graph_transfer_info_proto_init() }
func file_tensorflow_core_framework_graph_transfer_info_proto_init() {
	if File_tensorflow_core_framework_graph_transfer_info_proto != nil {
		return
	}
	file_tensorflow_core_framework_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_tensorflow_core_framework_graph_transfer_info_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GraphTransferInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_framework_graph_transfer_info_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GraphTransferInfo_NodeInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_framework_graph_transfer_info_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GraphTransferInfo_NodeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_framework_graph_transfer_info_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GraphTransferInfo_ConstNodeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_framework_graph_transfer_info_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GraphTransferInfo_NodeInputInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_framework_graph_transfer_info_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GraphTransferInfo_NodeOutputInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_framework_graph_transfer_info_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GraphTransferInfo_GraphInputNodeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_framework_graph_transfer_info_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GraphTransferInfo_GraphOutputNodeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tensorflow_core_framework_graph_transfer_info_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tensorflow_core_framework_graph_transfer_info_proto_goTypes,
		DependencyIndexes: file_tensorflow_core_framework_graph_transfer_info_proto_depIdxs,
		EnumInfos:         file_tensorflow_core_framework_graph_transfer_info_proto_enumTypes,
		MessageInfos:      file_tensorflow_core_framework_graph_transfer_info_proto_msgTypes,
	}.Build()
	File_tensorflow_core_framework_graph_transfer_info_proto = out.File
	file_tensorflow_core_framework_graph_transfer_info_proto_rawDesc = nil
	file_tensorflow_core_framework_graph_transfer_info_proto_goTypes = nil
	file_tensorflow_core_framework_graph_transfer_info_proto_depIdxs = nil
}
